#
# Rakefile for Chef Server Repository
#
# Author:: Adam Jacob (<adam@opscode.com>)
# Copyright:: Copyright (c) 2008 Opscode, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

task :default => [:list]

desc 'Lists all the tasks.'
task :list do
    puts "Tasks:\n- #{(Rake::Task.tasks).join("\n- ")}"
end

desc 'Test JSON validity'
task :jq do
    puts 'Checking JSON files for validity...'
    sh 'find . -name "*.json" | xargs -n1 scripts/jqlint'
    puts 'Done, no errors found.'
    puts ''
end

desc 'Test for tabs or trailing whitespace'
task :whitespace do
    puts 'Checking for tabs...'
    sh 'scripts/tab_check'
    puts 'Done, no tabs found.'
    puts ''
    puts 'Checking for trailing whitespace...'
    sh 'scripts/whitespace_check'
    puts 'Done, no trailing whitespace found.'
    puts ''
    puts 'Checking for smart quotes...'
    sh 'scripts/smart_quote_check'
    puts 'Done, no smart quote characters found.'
    puts ''
end

desc 'Test cookbook integrity'
task :cookbooktest do
    puts 'Running cookstyle on the cookbooks and test specs'
    sh 'cookstyle cookbooks test/integration'
    puts 'Done, cookstyle checks passed.'
    puts ''
    puts 'Running foodcritic on the cookbooks'
    sh 'foodcritic -P -f any cookbooks'
    puts 'Done, foodcritic tests passed.'
    puts ''
end

desc 'Run Test-Kichen'
task :kitchen do
    puts 'Cleaning up any previous kitchen instances'
    sh 'kitchen destroy all'
    puts 'Running TK...'
    sh 'kitchen test'
    puts 'Done'
end

desc 'Upload environments to the Chef server'
task :envs do
    puts 'Uploading environments...'
    sh 'knife upload --chef-repo-path . /environments'
    puts 'Done.'
end

desc 'Upload roles to the Chef server'
task :roles do
    puts 'Uploading roles...'
    sh 'knife upload --chef-repo-path . /roles'
    puts 'Done.'
end

desc 'Upload data bags to the Chef server'
task :databags do
    puts 'Uploading data bags...'
    sh 'knife upload --chef-repo-path . /data_bags'
    puts 'Done.'
end

desc 'Upload cookbooks to the Chef server via Berkshelf'
task :berks do
    puts 'Uploading cookbooks...'
    sh 'berks install'
    sh 'berks upload'
    puts 'Done.'
end

desc 'Run all cookbook and JSON tests'
task :test => [:cookbooktest, :jq, :whitespace]

desc 'Run all CI related tasks'
task :ci => [:test, :envs, :roles, :databags, :berks]

desc 'Run all CI related tasks including TK'
task :cik => [:test, :kitchen, :envs, :roles, :databags, :berks]
